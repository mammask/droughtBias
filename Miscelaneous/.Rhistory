library(ggthe)
library(data.table)
library(ggplot2)
library(gridExtra)
library(ggthemes)
nRecords = 100
dts = data.table(Value = rnorm(n = 100 * 3, mean = 5, sd = 10),
Members = sample(c("Kostas","Andre","Filipe"), size = nRecords*3, replace = T),
Category = sample(c("A","B","C"), size = nRecords*3, replace = T),
SubCategory = sample(c("1A","1B","1C"), size = nRecords*3, replace = T)
)
dts
dts[Members == "Andre"]
andre = copy(dts[Members == "Andre"])
andre
andre[, id := 1:.N]
andre
andre[, id := 1:.N]
andre
ggplot
p = ggplot(data = andre) + geom_point(aes(x = id, Value))
p
p = ggplot(data = andre) + geom_point(aes(x = id, Value), size = 3)
p
p = ggplot(data = andre) + geom_point(aes(x = id, Value), size = 3, type = "1")
p = ggplot(data = andre) + geom_point(aes(x = id, Value, size = Category))
p
andre
p = ggplot(data = andre) + geom_point(aes(x = id, y = Value, color = Category))
p
p = ggplot(data = andre) + geom_point(aes(x = id, y = Value), color = "red")
p
p = ggplot(data = andre, aes(x = id, y = Value), color = "red") + geom_point()
p
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red")
p
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") + geom_line()
p
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") + geom_line(data = andre[id <40], aes(x = id, y = Value))
p
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) + geom_smooth(method = "lm")
p
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value)method = "lm")
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "lm")
p
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess")
p
andre
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category)
p
andre[, Category := factor(Category, levels = c("C","A","B"))]
p = ggplot(data = andre, aes(x = id, y = Value)) + geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category)
p
facet_grid
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean()
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + element_text(andre[,Value])
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + element_text()
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + element_text(aes(label = Value))
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + element_text(data = andre, aes(x = id, label = Value))
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + element_text(aes(x = id, label = Value))
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + geom_text(aes(x = id, label = Value))
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + geom_text(aes(x = id, label = round(Value)))
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() + geom_text(aes(x = id, label = paste0("Value:",round(Value))))
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 1)
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3)
p
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(color = "red") +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
p
andre
p
andre
p = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
p
andre
dcast.data.table(data = andre, formula = Members + Category + ~ Subcategory, fun.aggregate = sum)
dcast.data.table(data = andre, formula = "Members + Category + ~ Subcategory", fun.aggregate = sum)
andre
andre
andre
dcast.data.table(data = andre, formula = "Members + Category ~ Subcategory", fun.aggregate = sum)
dcast.data.table(data = andre, formula = "Members + Category ~ SubCategory", fun.aggregate = sum)
dcast.data.table(data = andre, formula = "Members + Category ~ SubCategory")
dcast.data.table(data = andre, formula = "Members + Category + id ~ SubCategory")
andreDcast = copy(dcast.data.table(data = andre, formula = "Members + Category + id ~ SubCategory"))
andreDcast = copy(dcast.data.table(data = andre, formula = "Members + Category + id ~ SubCategory"))
andreDcast
ggplot(data = andreDcast) + geom_point(aqes(x = id, y = `1A`))
ggplot(data = andreDcast) + geom_point(aes(x = id, y = `1A`))
ggplot(data = andreDcast) + geom_point(aes(x = id, y = `1A`)) + geom_point(aes(x = id, y = `1B`))
andre
andreDcast
andre
andre
filipe = copy(dts[Members == "Filipe"])
filipe = copy(dts[Members == "Filipe"])
filipe[, id := 1:.N]
filipe[, Category := factor(Category, levels = c("C","A","B"))]
filipe
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pf = ggplot(data = filipe, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pf
grid.arrange(pa, pf, ncol = 1)
grid.arrange(pa, pf, ncol = 2)
grid.arrange(pa, pf, ncol = 1)
p = grid.arrange(pa, pf, ncol = 1)
pf = ggplot(data = filipe, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1) +
theme(axis.text.x = element_blank())
pf
?theme
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
theme
andre
filipe
filipe[, plot(id, value, type = "l")]
filipe[, plot(id, Value, type = "l")]
filipe
filipe[, plot(id, Value, type = "l"), by = Category]
filipe[, list(plot(id, Value, type = "l")), by = Category]
filipe[, plot(id, Value, type = "l")]
filipe
myPlot = filipe[, .(list(plot(id, Value, type = "l")))]
myPlot
myPlot[["V1"]]
myPlot[["V1"]]
myPlot = filipe[, .(plot(id, Value, type = "l"))]
myPlot
filipe
?geom_smooth
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "glm", formula = "Value + id") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
andre
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "glm", formula = "Value + Category") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "glm", formula = "Value ~ Category") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "glm", formula = "Value ~ id") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess", formula = "Value ~ Category") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "glm") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "lm") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = Category), method = "lm") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = SubCategory), method = "lm") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = SubCategory), method = "lm", formula = "Value~SubCategory") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = SubCategory), method = "glm", formula = "Value~SubCategory") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = SubCategory), method = "glm") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = SubCategory), method = "glm") +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pf = ggplot(data = filipe, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1) +
p = grid.arrange(pa, pf, ncol = 1)
pf = ggplot(data = filipe, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1) +
p = grid.arrange(pa, pf, ncol = 1)
pa = ggplot(data = andre, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value, fill = SubCategory), method = "glm", formula = Value~SubCategory) +
facet_grid(~Category) + ggthemes::theme_wsj() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
pa
andre
p = ggplot(data = filipe, aes(x = id, y = Value)) +
geom_point(aes(color = SubCategory)) +
geom_line(data = andre[id <40], aes(x = id, y = Value)) +
geom_smooth(data = andre[id <40], aes(x = id, y = Value), method = "loess") +
facet_grid(~Category) + ggthemes::theme_clean() +
geom_text(aes(x = id, label = paste0("Value:",round(Value))), size = 3, hjust = 1)
class(p)
attributes(p)
str(p)
andre
andre1 = andre
andre1[, Value = Value^2]
andre1[, Value =: Value^2]
andre1[, Value := Value^2]
andre1
andre
andre1 = copy(andre)
setwd("D:/Research/droughtBias/src")
# Load configuration files
config = configr::read.config(file = "../config.cfg")
# Load multiple libraries
lapply(config$dependencies$libraries, require, character.only = TRUE)
# Load source functions
source("../src/GenerateDescriptives.R")
source("../src/GenerateMissClass.R")
source("../src/CompareParameters.R")
source("../src/PlotRawStationData.R")
source("../src/CompareDensities.R")
source("../src/ComputeBiasOverScales.R")
source("../src/GenerateSpatialMissClass.R")
source("../src/GenerateBoxPlotPerClGr.R")
source("../src/GenerateBiasTrendGrowth.R")
# Set parameters
spiScales = config[['scale']][['spiScales']]
measureBias = config[['scenario']][["measureBias"]]
saveOutputs = config[['scenario']][["saveOutputs"]]
# Load KÃ¶ppen Classification
koppen = fread("../data/mapper_sweden_Koppen.csv")
koppen = koppen[is.na(GRIDCODE), GRIDCODE:= 0]
koppen[GRIDCODE == 42, GRIDCODE := 43]
koppen[, Station := as.character(SUBIDnew)]
# Load Basins locations
basins = readOGR("c:/Users/komammas.EUROPE/Downloads/drive-download-20210222T094357Z-001/SHYPE2012_version_1_2_0_polygons_smallglomma_wgs84.dbf")
# setDT(basins)
# basins[, Station := as.character(SUBIDnew) ]
# Generate Plots with spatial descriptives -------------------------------------
# Loading metadata
print("Loading metadata")
t = system.time({
spiData = readRDS(paste0("../outputs/bias measurement/",config[['distribution']],"_training_bias_",
config[["scale"]],".RDS")
)
setDT(spiData)
})
print(paste0("Metadata loaded in ",t[[3]]," seconds."))
source('D:/Research/droughtBias/src/PlotRawStationData.R', echo=TRUE)
stationRawData(spiData, spiScales, stationId = config[["station"]][["stationId"]])
setwd("D:/Research/droughtBias/src")
# Load configuration files
config = configr::read.config(file = "../config.cfg")
# Load multiple libraries
lapply(config$dependencies$libraries, require, character.only = TRUE)
# Load source functions
source("../src/GenerateDescriptives.R")
source("../src/GenerateMissClass.R")
source("../src/CompareParameters.R")
source("../src/PlotRawStationData.R")
source("../src/CompareDensities.R")
source("../src/ComputeBiasOverScales.R")
source("../src/GenerateSpatialMissClass.R")
source("../src/GenerateBoxPlotPerClGr.R")
source("../src/GenerateBiasTrendGrowth.R")
# Set parameters
spiScales = config[['scale']][['spiScales']]
measureBias = config[['scenario']][["measureBias"]]
saveOutputs = config[['scenario']][["saveOutputs"]]
# Load KÃ¶ppen Classification
koppen = fread("../data/mapper_sweden_Koppen.csv")
koppen = koppen[is.na(GRIDCODE), GRIDCODE:= 0]
koppen[GRIDCODE == 42, GRIDCODE := 43]
koppen[, Station := as.character(SUBIDnew)]
# Load Basins locations
basins = readOGR("c:/Users/komammas.EUROPE/Downloads/drive-download-20210222T094357Z-001/SHYPE2012_version_1_2_0_polygons_smallglomma_wgs84.dbf")
# setDT(basins)
# basins[, Station := as.character(SUBIDnew) ]
# Generate Plots with spatial descriptives -------------------------------------
# Loading metadata
print("Loading metadata")
t = system.time({
spiData = readRDS(paste0("../outputs/bias measurement/",config[['distribution']],"_training_bias_",
config[["scale"]],".RDS")
)
setDT(spiData)
})
print(paste0("Metadata loaded in ",t[[3]]," seconds."))
if (config[["plots"]][["spatialDescriptives"]] == TRUE){
GenerateDescriptivesMaps(spiData, koppen, station, basins)
}
if (config[["plots"]][["missclassifications"]] == TRUE){
GenerateMissclassifications(spiData, spiScales)
}
if (config[["plots"]][["compareParameters"]] == TRUE){
CompareParameters(spiData, spiScales)
}
if (config[["plots"]][["compareStatioRawData"]] == TRUE){
stationRawData(spiData, spiScales, stationId = config[["station"]][["stationId"]])
}
if (config[["plots"]][["compareDensities"]] == TRUE){
CompareDensities(spiData, spiScales, stationId = config[["station"]][["stationId"]])
}
if (config[["plots"]][["biasOverScales"]] == TRUE){
ComputeBiasOverScales()
}
if (config[["plots"]][["spatialMissclassifications"]] == TRUE){
GenerateSpatialMissClass()
}
if (config[["plots"]][["boxplotClimateRegions"]] == TRUE){
GenerateBoxPlotsPerClGradient()
}
if (config[["plots"]][["BiasTrendGrowth"]] == TRUE){
BiasTrendGrowth(spiData, spiScales)
}
setwd("D:/Research/droughtBias/Miscelaneous")
# stationRawData = function(spiData, spiScales, stationId = "3357"){
library(data.table)
library(ggplot2)
library(zoo)
spiScales = 12
stationId = "3357"
# normalTr = readRDS(paste0("../outputs/bias measurement/Normal_training_bias_",spiScales,".RDS"))
# normalTr = normalTr[updatedBasins == stationId,rawSpi[[1]]]
# normalTr[, Distribution := "Normal"]
#
# lognormalTr = readRDS(paste0("../outputs/bias measurement/LogNormal_training_bias_",spiScales,".RDS"))
# lognormalTr = lognormalTr[updatedBasins == stationId,rawSpi[[1]]]
# lognormalTr[, Distribution := "Lognormal"]
gammaTr = readRDS(paste0("../outputs/bias measurement/Gamma_training_bias_",spiScales,".RDS"))
gammaTr = gammaTr[updatedBasins == stationId,rawSpi[[1]]]
gammaTr[, Distribution := 'Stationary SPI']
nsgammaTr = readRDS(paste0("../outputs/bias measurement/NSGamma_training_bias_",spiScales,".RDS"))
nsgammaTr = nsgammaTr[updatedBasins == stationId,rawSpi[[1]]]
nsgammaTr[, Distribution := "Non-stationary SPI"]
allDist = rbindlist(list(gammaTr, nsgammaTr))
allDist[, Distribution := factor(Distribution, levels = c("Stationary SPI", "Non-stationary SPI"))]
print(paste0("Extracting data for station ",stationId))
# Obtain records for the specific station
# stationRecords <- copy(spiData[spiScales == spiScales & updatedBasins == stationId][,rawSpi[[1]]])
# Convert date to year month day format
allDist[, Date:= as.yearmon(Date)]
allDist[Status == 'Train' & Distribution == 'Non-stationary SPI', .(MEAN = mean(Rainfall), VAR = var(Rainfall))]
allDist[Status != 'Train' & Distribution == 'Non-stationary SPI', .(MEAN = mean(Rainfall), VAR = var(Rainfall))]
p2 <- ggplot(allDist[complete.cases(allDist)][Status %in% c("Train")]) +
geom_line(aes(x = Date, y = `SPI-TVT`), size = 0.2, color = "red") +
geom_line( aes(x = Date, y = `SPI-T`, size = 1), color = "black", size = 0.2) +
ylab(paste0("SPI-",spiScales,""))+ theme_light() +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.title=element_text(size=8),
legend.text=element_text(size=7),
legend.position = "top",
strip.text.x = element_text(size = 6)) +
facet_wrap(~Distribution, nrow = 2) +
scale_x_yearmon()
ggsave(plot = p2, filename = paste0("../outputs/all_dist_station_",stationId,"_scale_",spiScales,".jpg"),
units="cm", width=12, height=6, dpi = 1000)
